@page
@using Dropbox.Api.Sharing
@using System.Globalization
@inject IStringLocalizer<SharedResource> SharedResource
@inject IStringLocalizer<SmartCutModel> Resources
@using Microsoft.Extensions.Localization
@model VralumGlassWeb.Pages.SmartCutModel
@{
    ViewData["Title"] = SharedResource["Cutting Optimization"];

    var clampList = new List<SelectListItem>();
    Model.Clips.ForEach(i =>
    {
        clampList.Add(new SelectListItem(i.Name, $"{i.Name}"));
    });

}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a  asp-area="" asp-page="/Index">@SharedResource["Home Page"]</a></li>
        <li class="breadcrumb-item active">@SharedResource["Utilities"]</li>
        <li class="breadcrumb-item active" aria-current="page">@SharedResource["Cutting Optimization"]</li>
    </ol>
</nav>
@*<h2>SmartCut Tool - <small class="text-muted">optimal linear cutting</small></h2>*@

<div class="row mt-5">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body" style="min-height: 200px">
                <h5 class="card-title">@Resources["Settings"]</h5>
                <form id="main_form">

                    <input type="hidden" asp-for="@Model.PlankReserve" />

                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label" asp-for="@Model.ProjectName"></label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control" required maxlength="100" asp-for="@Model.ProjectName" placeholder="">
                            <span asp-validation-for="@Model.ProjectName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label" asp-for="@Model.Clip"></label>
                        <div class="col-sm-4">
                            <select class="form-control" asp-for="@Model.Clip" asp-items="clampList"></select>
                            <span asp-validation-for="@Model.Clip" class="text-danger"></span>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-body" style="min-height: 200px">
                <h5 class="card-title">@Resources["Stocks"]</h5>

                <div id="plank_table" class="table-editable">

                    <table class="table table-hover table-bordered table-responsive-md text-center table-sm">

                        <tr>
                            <th scope="col" class="text-center">№</th>
                            <th scope="col" class="text-center">@Resources["Length"]</th>
                            <th scope="col" class="text-center"></th>
                        </tr>

                        @for (var i = 0; i < @Model.Planks.Count; i++)
                        {
                            <tr>
                                <td style="width: 53px;">@(i + 1)</td>
                                <td contenteditable="true">@Model.Planks[i]</td>
                                <td style="width: 43px;">
                                    <span class="table-remove"><i class="fa fa-trash"></i></span>
                                </td>
                            </tr>
                        }

                        <tr style="display: none">
                            <td style="width: 53px;"></td>
                            <td contenteditable="true"></td>
                            <td style="width: 43px;">
                                <span class="table-remove"><i class="fa fa-trash"></i></span>
                            </td>
                        </tr>

                    </table>

                    <div class="row">
                        <div class="col-md-12">
                            <button class="table-add btn btn-dark btn-block rounded-0"><i class="fas fa-plus" aria-hidden="true"></i> @Resources["Add"]</button>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        
    </div>

</div>

<div class="row mt-5">
    <div class="col-md-12">

        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@Resources["Snippets"]</h5>
                <div id="snippet_table" class="table-editable">

                    <div class="row">

                        <div class="col-md-2 pr-md-1">
                            <button id="clear-all-btn" class="btn btn-outline-danger btn-block rounded-0"><i class="fas fa-minus" aria-hidden="true"></i> @Resources["Remove All"]</button>
                        </div>
                        <div class="col-md-4 pl-md-1">
                            <button id="cutting-btn2" class="btn btn-primary btn-block rounded-0"><i class="fas fa-cut" aria-hidden="true"></i> @Resources["Start Optimization"]</button>
                        </div>

                        <div class="col-md-6 pr-md-1">
                            <form id="import_excel_form" method="POST" enctype="multipart/form-data">
                                <span class="float-right mb-3 mr-2">
                                    <span class="btn btn-outline-success rounded-0 fileinput-button">
                                        <i class="fas fa-file-excel" aria-hidden="true"></i> @Resources["Import Excel"]
                                        <input type="file" asp-for="ImportExcel" />
                                    </span>
                                </span>
                                <input type="submit" asp-page-handler="Import" style="display: none" />
                            </form>
                        </div>


                    </div>

                    <table class="table table-hover table-bordered table-responsive-md text-center table-sm">

                        <tr>
                            <th scope="col" class="text-center">№</th>
                            <th scope="col" class="text-center">@Resources["Length"]</th>
                            <th scope="col" class="text-center">@Resources["Apartment"]</th>
                            <th scope="col" class="text-center">@Resources["Floor"]</th>
                            <th scope="col" class="text-center">@Resources["Columns"]</th>
                            <th scope="col" class="text-center"></th>
                        </tr>

                        @for (var i = 0; i < @Model.Snippets.Count; i++)
                        {
                            <tr>
                                <td style="width: 53px;">@(i + 1)</td>
                                <td contenteditable="true">@Model.Snippets[i].Length</td>
                                <td contenteditable="true">@Model.Snippets[i].Apartment</td>
                                <td contenteditable="true">@Model.Snippets[i].Floor</td>
                                <td contenteditable="true">@Model.Snippets[i].Columns</td>
                                <td style="width: 43px;">
                                    <span class="table-remove"><i class="fa fa-trash"></i></span>
                                </td>
                            </tr>
                        }

                        <tr style="display: none">
                            <td style="width: 53px;"></td>
                            <td contenteditable="true"></td>
                            <td contenteditable="true"></td>
                            <td contenteditable="true"></td>
                            <td contenteditable="true"></td>
                            <td style="        width: 43px;
">
                                <span class="table-remove"><i class="fa fa-trash"></i></span>
                            </td>
                        </tr>

                    </table>

                    <div class="row">
                        <div class="col-md-2 pr-md-1">
                            <button class="table-add btn btn-dark btn-block rounded-0"><i class="fas fa-plus" aria-hidden="true"></i> @Resources["Add"]</button>
                        </div>
                        <div class="col-md-10 pl-md-1">
                            <button id="cutting-btn" class="btn btn-primary btn-block rounded-0"><i class="fas fa-cut" aria-hidden="true"></i> @Resources["Start Optimization"]</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>

    </div>
</div>

<div id="export" class="card mt-5 animated fadeIn" style="display: none">
    <div class="card-body">
        <h5 class="text-success card-title">@Resources["Optimization complete!"]</h5>
        <div class="row">
            <div class="col-md-6">
                <blockquote class="mb-0 mt-2">
                    <label>@Resources["Stocks"]:</label>
                    <ul id="export_body" class="list-group list-group-flush"></ul>
                    <footer id="export_footer" class="blockquote-footer text-danger"></footer>
                </blockquote>
            </div>
        </div>
        <span class="float-right mb-3 mr-2">
            <a class="btn btn-outline-success rounded-0" target="_blank" rel="noopener noreferrer" asp-page-handler="Export">
                <i class="fas fa-file-excel" aria-hidden="true"></i> @Resources["Export Excel"]
            </a>
        </span>

        <table class="table table-hover table-bordered table-responsive-md text-center table-sm mt-5"></table>

    </div>
</div>


@section Scripts
{

    <script type="text/javascript">

		var $PROJECT_NAME = $('#ProjectName');
        var $CLIP = $('#Clip');
        var $PLANK_TABLE = $('#plank_table');
        var $SNIPPET_TABLE = $('#snippet_table');
        var $BTN = $('#cutting-btn, #cutting-btn2');
		
        String.prototype.format = function() {
            var args = arguments;
            return this.replace(/\{\{|\}\}|\{(\d+)\}/g,
                function(m, n) {
                    if (m == "{{") {
                        return "{";
                    }
                    if (m == "}}") {
                        return "}";
                    }
                    return args[n];
                });
        };

        var isNumeric = function(n) {
            return isFinite(n) && parseFloat(n) == n;
        };

        $('#ImportExcel').on('change',
            function(evt) {
                evt.preventDefault();
                var projectName = $('#main_form input[name=ProjectName]').val();			
				$('#import_excel_form').append($('<input/>', { 'type':'hidden', 'name':'ProjectName', 'value': projectName }));  
				var clip = $('#main_form select[name=Clip]').val();						
				$('#import_excel_form').append($('<input/>', { 'type':'hidden', 'name':'Clip', 'value': clip }));

				var $rowsPlank = $PLANK_TABLE.find('tr:not(:hidden)');
				var index = 0;
				$rowsPlank.each(function() {
					var $td = $(this).find('td');
					if ($td.length !== 0) {
						var value = $td.eq(1).text();
						if (isNumeric(value)) {
							$('#import_excel_form').append($('<input/>', { 'type':'hidden', 'name':'Planks[' + index++ + ']', 'value': value }));
						}
					}
				});

                $("#import_excel_form input:submit").click();

                //var form = document.getElementById("import_excel_form");
                //$.ajax({
                //    url: '?handler=Test',
                //    data: new FormData(form),
                //    contentType: false,
                //    processData: false,
                //    type: 'post',
                //    success: function() {
                //        alert('Uploaded by jQuery');
                //    }
                //});
            });

        $('.table-add').click(function() {
            var tableEdit = $(this).parents('.table-editable');
            var $clone = tableEdit.find('tr:hidden').clone(true).css('display', '');
            var lastIndex = tableEdit.find('tr:not(:hidden):last').find('td').eq(0).text();
            if (!lastIndex) {
                lastIndex = 0;
            }
            $clone.find('td').eq(0).text(parseInt(lastIndex) + 1);
            tableEdit.find('table').append($clone);
        });

        $('.table-remove').click(function() {
            $(this).parents('tr').detach();
        });

        $('#clear-all-btn').click(function() {
            $SNIPPET_TABLE.find('tr:not(:hidden):not(:first)').remove();
        });

        $('.table-up').click(function() {
            var $row = $(this).parents('tr');
            if ($row.index() === 1) return; // Don't go above the header
            $row.prev().before($row.get(0));
        });

        $('.table-down').click(function() {
            var $row = $(this).parents('tr');
            $row.next().after($row.get(0));
        });

        // A few jQuery helpers for exporting only
        jQuery.fn.pop = [].pop;
        jQuery.fn.shift = [].shift;

        $BTN.click(function() {

            $("#export_body").empty();
            $('#export').find('table tr').remove();
            $("#export").hide();

            if (!$('#main_form').valid()) {
                $('body,html').animate({
                        scrollTop: 0
                    },
                    400);
                return;
            }

            var $rowsPlank = $PLANK_TABLE.find('tr:not(:hidden)');
            var dataPlank = [];
            $rowsPlank.each(function() {
                var $td = $(this).find('td');
                if ($td.length !== 0) {
                    var value = $td.eq(1).text();
                    if (isNumeric(value)) {
                        dataPlank.push(value);
                    }
                }
            });


            var $rows = $SNIPPET_TABLE.find('tr:not(:hidden)');
            var headers = ["Id", "Length", "Apartment", "Floor", "Columns"];
            var data = [];

            // Get the headers (add special header logic here)
            //$($rows.shift()).find('th:not(:empty)').each(function() {
            //    headers.push($(this).text().toLowerCase());
            //});

            // Turn all existing rows into a loopable array
            $rows.each(function() {
                var $td = $(this).find('td');
                if ($td.length !== 0) {
                    var h = {};

                    // Use the headers from earlier to name our hash keys
                    headers.forEach(function(header, i) {
                        if (i !== 0) {
                            var value = $td.eq(i).text();
                            if (value) {
                                if (i === 1) {
                                    if (value.trim()) {
                                        var v = parseFloat(value.trim());
                                        if (!isNumeric(v)) {
                                            var error =
                                                '@Html.Raw(Resources["Invalid snippet length ({0} is not number in line {1})"])'
                                                    .format(value, $td.eq(0).text());
                                            console.log(error);
                                            alert(error);
                                            throw error;
                                        } else {
                                            h[header] = v;
                                        }
                                    }
                                } else if (i > 1) {
                                    h[header] = value;
                                }
                            }
                        }
                    });

                    data.push(h);
                }
            });

            $.ajax({
                type: "POST",
                url: "?handler=Calculate",
                beforeSend: function(xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());

                    $('#loadingModal').modal('show');
                },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({
                    "ProjectName": $PROJECT_NAME.val(),
                    "Clip": $CLIP.val(),
                    "Planks": dataPlank,
                    "Snippets": data
                }),
                success: function(response) {

                    $("#export").show();

                    $('html,body').animate({
                        scrollTop: $("#export").offset().top
                    });

                    var plankSizes = {};
                    $.each(response.planks,
                        function(i, plank) {
                            var l = plankSizes[plank.originalLength];
                            if (!l) {
                                plankSizes[plank.originalLength] = 1;
                            } else {
                                plankSizes[plank.originalLength] += 1;
                            }
                        });

                    var exportBody = $('#export_body');
                    var totalLength = 0;
                    var plankReserve = parseInt('@Model.PlankReserve');
                    $.each(plankSizes,
                        function(key, value) {
                            var item = $('<li/>',
                                {
                                    'class': 'list-group-item d-flex justify-content-between align-items-center',
                                    'css': { 'padding-top': '0.3rem', 'padding-bottom': '0.3rem' }
                                });
                            var plankWithReserve = parseFloat(key) + plankReserve;
                            var length = plankWithReserve * parseInt(value);
                            item.append($('<span/>',
                                { text: '{0}X{1}={2}'.format(plankWithReserve, value, length) }));
                            exportBody.append(item);

                            totalLength += length;
                        });

                    $('#export_footer').html('@Resources["total: {0} with {1} waste ({2}%)"]'.format(totalLength,
                        response.free,
                        (parseFloat(response.free) * 100 / totalLength).toFixed(2)));

                    var exportTable = $('#export').find('table');
                    exportTable.append($('<tr>')
                        .append($('<th/>', { 'scope': 'col', 'class': 'text-center' }).text('№'))
                        .append($('<th/>', { 'scope': 'col', 'class': 'text-center' }).html('@Resources["Stocks"]'))
                        .append(
                            $('<th/>', { 'scope': 'col', 'class': 'text-center' })
                            .html('@Resources["Snippets [Floor/Apartment]"]'))
                        .append($('<th/>', { 'scope': 'col', 'class': 'text-center' }).html('@Resources["Waste"]'))
                    );
                    $.each(response.planks,
                        function(i, plank) {
                            var cuts = $('<div/>', { 'class': 'row' });

                            $.each(plank.cuts,
                                function(i, cut) {
                                    cuts.append($('<div/>', { 'class': 'col-md-3' })
                                        .text("{0} [{1}/{2}]".format(cut.length, cut.floor, cut.apartment)));
                                });

                            exportTable.append($('<tr>')
                                .append($('<td/>', { 'css': { 'width': '53px' } }).text(i + 1))
                                .append($('<td/>', { 'css': { 'width': '200px' }, 'class': 'text-success' }).text(
                                    '{0} (~{1})'.format(parseFloat(plank.originalLength) + plankReserve,
                                        plank.originalLength)))
                                .append($('<td/>').append(cuts))
                                .append($('<td/>', { 'class': 'text-danger' }).text(plank.freeLength))
                            );
                        });


                },
                error: function(response) {
                    var result = response.responseJSON;
                    alert(result.Message);
                },
                complete: function() {
                    $('#loadingModal').modal('hide');
                },
            });
        });
    </script>
}
