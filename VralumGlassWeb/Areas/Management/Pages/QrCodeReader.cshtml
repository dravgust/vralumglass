@page

@{
    ViewData["Title"] = "QR Code Reader";
}

<div class="row mt-5">
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <div class="well">
            <canvas width="300" height="225" id="webcodecam-canvas"></canvas>
            <div class="scanner-laser laser-rightBottom" style="opacity: 0.5;"></div>
            <div class="scanner-laser laser-rightTop" style="opacity: 0.5;"></div>
            <div class="scanner-laser laser-leftBottom" style="opacity: 0.5;"></div>
            <div class="scanner-laser laser-leftTop" style="opacity: 0.5;"></div>
        </div>
    </div>
    <div class="col-md-4"></div>
</div>


@section Scripts {
    <style>

        #camera-select {
            display: inline-block;
            width: auto;
        }

        #webcodecam-canvas {
            background-color: #272822;
        }

        .well {
            position: relative;
            display: inline-block;
        }

        .scanner-laser {
            position: absolute;
            margin: 40px;
            height: 30px;
            width: 30px;
            opacity: 0.5;
        }

        .laser-leftTop {
            top: 0;
            left: 0;
            border-top: solid red 5px;
            border-left: solid red 5px;
        }

        .laser-leftBottom {
            bottom: 0;
            left: 0;
            border-bottom: solid red 5px;
            border-left: solid red 5px;
        }

        .laser-rightTop {
            top: 0;
            right: 0;
            border-top: solid red 5px;
            border-right: solid red 5px;
        }

        .laser-rightBottom {
            bottom: 0;
            right: 0;
            border-bottom: solid red 5px;
            border-right: solid red 5px;
        }
    </style>

    <script type="text/javascript" src="~/lib/webcodecamjs/dist/js/qrcodelib.js"></script>
    <script src="~/lib/webcodecamjs/dist/js/webcodecamjs.js"></script>
    <script type="text/javascript" src="~/lib/webcodecamjs/dist/js/webcodecamjquery.js"></script>

    <script type="text/javascript">

        /* -------------------------------------- Available parameters --------------------------------------*/
        var options = {
            DecodeQRCodeRate: 5,                    // null to disable OR int > 0 !
            DecodeBarCodeRate: 5,                   // null to disable OR int > 0 !
            successTimeout: 500,                    // delay time when decoding is succeed
            codeRepetition: true,                   // accept code repetition true or false
            tryVertical: true,                      // try decoding vertically positioned barcode true or false
            frameRate: 15,                          // 1 - 25
            width: 300,                             // canvas width
            height: 225,                            // canvas height
            constraints: {                          // default constraints
                video: {
                    mandatory: {
                        maxWidth: 1280,
                        maxHeight: 720
                    },
                    optional: [{
                        sourceId: true
                    }]
                },
                audio: false
            },
            flipVertical: false,                    // boolean
            flipHorizontal: false,                  // boolean
            zoom: -1,                               // if zoom = -1, auto zoom for optimal resolution else int
            beep: '/lib/webcodecamjs/dist/audio/beep.mp3',
            decoderWorker: '/lib/webcodecamjs/dist/js/DecoderWorker.js',   // string, DecoderWorker file location
            brightness: 0,                          // int
            autoBrightnessValue: false,             // functional when value autoBrightnessValue is int
            grayScale: false,                       // boolean
            contrast: 0,                            // int
            threshold: 0,                           // int
            sharpness: [],      // to On declare matrix, example for sharpness ->  [0, -1, 0, -1, 5, -1, 0, -1, 0]
            resultFunction: function (result) {
                /*
                    result.format: code format,
                    result.code: decoded string,
                    result.imgData: decoded image data
                */
                window.location.href = result.code;
            },
            cameraSuccess: function (stream) {           //callback funtion to camera success
                console.log('cameraSuccess');
            },
            canPlayFunction: function () {               //callback funtion to can play
                console.log('canPlayFunction');
            },
            getDevicesError: function (error) {          //callback funtion to get Devices error
                console.log(error);
            },
            getUserMediaError: function (error) {        //callback funtion to get usermedia error
                console.log(error);
            },
            cameraError: function (error) {              //callback funtion to camera error
                console.log(error);
            }
        };

        /*------------------------ Example initializations jquery & Javascript version ------------------------*/
        var decoder = new WebCodeCamJS('#webcodecam-canvas');

        var decoder = $("#webcodecam-canvas").WebCodeCamJQuery(options).data().plugin_WebCodeCamJQuery;

        decoder.play();
        //decoder.options['zoom'] = decoder.getOptimalZoom();;

    </script>
}